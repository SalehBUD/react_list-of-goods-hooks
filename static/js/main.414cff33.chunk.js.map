{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","good","nextGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderOptions","className","type","classNames","onClick","map","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAhCD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAKG,cAAcF,GAE5B,KAAKb,EAASgB,OACZ,OAAOJ,EAAKK,OAASJ,EAASI,OAEhC,KAAKjB,EAASI,KACd,QACE,OAAO,MAITG,GACFG,EAAaQ,UAGRR,EAQOS,CAAkBlB,EAAiB,CAAEI,WAAUE,eAmB7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYjB,IAAaL,EAASc,WAEpCS,QAzBe,WACrBjB,EAAYN,EAASc,WAmBjB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYjB,IAAaL,EAASgB,SAEpCO,QA/Ba,WACnBjB,EAAYN,EAASgB,SAyBjB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaf,IAEfgB,QArCQ,WACdf,GAAeD,IA+BX,sBASEF,IAAaL,EAASI,OAAuB,IAAfG,IAC9B,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAzCI,WACZjB,EAAYN,EAASI,MACrBI,GAAc,IAoCR,sBAUJ,6BACE,6BACGC,EAAMe,KAAI,SAACZ,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC3HrBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.414cff33.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderOptions(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good, nextGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return good.length - nextGood.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getReorderOptions(goodsFromServer, { sortType, isReversed });\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE || isReversed !== false) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map((good) => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}